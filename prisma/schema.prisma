// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

//#region User
model User {
  Id         String    @id @default(uuid())
  DateCreate DateTime  @default(now())
  DateUpdate DateTime? @updatedAt
  Name       String
  Email      String    @unique
  Password   String
  Role       RoleType
  Member     Member[]
  Message    Message[]
}

//#endregion

enum RoleType {
  SUPERADMIN
  ADMIN
  MENTOR
  MEMBER
}

//#region Conversation
model Conversation {
  Id         String           @id @default(uuid())
  DateCreate DateTime         @default(now())
  DateUpdate DateTime?        @updatedAt
  Name       String?
  Type       ConversationType
  Member     Member[]
  Message    Message[]
}

//#endregion

enum ConversationType {
  PRIVATE
  GROUP
  BROADCAST
}

//#region Member
model Member {
  Id             String       @id @default(uuid())
  DateCreate     DateTime     @default(now())
  DateUpdate     DateTime?    @updatedAt
  IdUser         String
  IdConversation String
  User           User         @relation(fields: [IdUser], references: [Id], onDelete: Restrict)
  Conversation   Conversation @relation(fields: [IdConversation], references: [Id], onDelete: Restrict)
}

//#endregion

//#region Message
model Message {
  Id             String       @id @default(uuid())
  DateCreate     DateTime     @default(now())
  DateUpdate     DateTime?    @updatedAt
  Message        String
  Attachment     String?      @default("[]")
  IdUser         String
  IdConversation String
  User           User         @relation(fields: [IdUser], references: [Id], onDelete: Restrict)
  Conversation   Conversation @relation(fields: [IdConversation], references: [Id], onDelete: Restrict)
}

//#endregion
